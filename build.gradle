plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'swm.s3'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// SpringBoot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// h2
	runtimeOnly 'com.h2database:h2'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// elasticsearch
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Testcontainers
	testImplementation "org.testcontainers:testcontainers:1.19.0"

	// Docker
	implementation 'com.github.docker-java:docker-java-core:3.3.3'

	// RESTDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// for Mac M1
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// @ConfigurationProperties
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	sources {
		include("**/index.adoc")
	}
	baseDirFollowsSourceFile()
	dependsOn test
}
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}


task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc/index.html")
	into file("src/main/resources/static")
}

bootJar {
	dependsOn copyDocument
}