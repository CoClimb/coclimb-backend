server:
  port: ${test.server.port}

spring:
  config:
    activate:
      on-profile: test
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${test.db.url}
    username: ${test.db.username}
    password: ${test.db.password}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        create_empty_composites:
            enabled: true
#logging.level:
#  org.hibernate.SQL: debug

oauth:
  instagram:
    client_id: ${secret.instagram.client_id}
    client_secret: ${secret.instagram.client_secret}
    redirect_uri: ${secret.instagram.redirect_uri}

app-config:
  jwt :
    jwt-key: ${test.jwt.jwt_key}
    valid-time : ${test.jwt.valid_time}
  elastic:
    server-url: ${test.elastic.server_url}
    api-key: ${test.elastic.api_key}
    finger-print: ${test.elastic.finger_print}
    user-name: ${test.elastic.user_name}
    password: ${test.elastic.password}

aws-config:
  rds:
    secret-name : ${release.aws.rds.secret_name}
    region : ${release.aws.rds.region}
    db-url: ${release.db.url}
  credentials:
    access_key: ${secret.aws.access_key}
    secret_key: ${secret.aws.secret_key}
  s3:
    bucket: coclimb-media-bucket
    media:
      write_role_arn: "arn:aws:iam::085796513949:role/CoclimbS3Access"
      write_valid_time: 900 # sec
      read_role_arn: "arn:aws:iam::085796513949:role/CoclimbS3ReadOnly"
      read_valid_time: 3600 # sec
  cloudfront:
    host: ${test.aws.cloudfront.distribution_domain_name}
    secret-name: ${test.aws.cloudfront.secret_name}
    public_key_id: ${test.aws.cloudfront.public_key_id}
    region: ${test.aws.cloudfront.region}

front_end:
  host: ${test.front_end.host}